<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on </title>
    <link>/MacStrelioff/data-science/</link>
    <description>Recent content in Overview on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 May 2019 12:10:48 +0000</lastBuildDate>
    
	<atom:link href="/MacStrelioff/data-science/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Twitter, Poisson Processes, and Conjugacy</title>
      <link>/MacStrelioff/data-science/twitter-poisson-processes-and-conjugacy/</link>
      <pubDate>Sat, 11 May 2019 12:10:48 +0000</pubDate>
      
      <guid>/MacStrelioff/data-science/twitter-poisson-processes-and-conjugacy/</guid>
      <description>Background and Setup Twitter Data Pulling Data from Twitterâ€™s API Working with Twitter Status objects Embed a Status Convert a Status to a dict Access Status Attributes (How I accessed the data used below)  Poisson Process Assumptions Specification and Properties Checking the Homogeneity Assumption Checking the exponential distribution of intervals  Model of Tweet Fequency Using Conjugacy Inference On Tweet Rate \(\lambda\) Over Time  Predicting Number Of Tweets In Interval \(s\) Summary   Background and Setup In this notebook I focus on explaining Poisson processes and conjugacy applied to my Twitter activity.</description>
    </item>
    
    <item>
      <title></title>
      <link>/MacStrelioff/data-science/working-environment/</link>
      <pubDate>Thu, 09 May 2019 23:39:20 +0000</pubDate>
      
      <guid>/MacStrelioff/data-science/working-environment/</guid>
      <description>--- Working Environment My working environment relies on bash and git. Here I provide some background on these tools and a walkthrough for automatic, scheduled pushes to git.
Working With Bash and Git Useful Bash Commands login # prompts for username and then password to log in man # man (command) returns documentation a command  Directory Commands pwd # print working directory cd # changes directory to home cd \ # changes directory to (/path) cd .</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/MacStrelioff/data-science/learn-data-science/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/MacStrelioff/data-science/learn-data-science/</guid>
      <description>The sections below are documents I made based on things that were important, but not used often enough to commit to memory.</description>
    </item>
    
  </channel>
</rss>